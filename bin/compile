#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -o errexit
set -o pipefail
set -o nounset

# debug
#set -x

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

# create CACHE_DIR if not exists
mkdir -p $CACHE_DIR

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# figure out latest version
VERSION=$(curl -Is https://github.com/mozilla/geckodriver/releases/latest | grep location: |  sed -e's,/,\n,g' | tail -1 | sed -e's,\r,,')

ARCHIVE_NAME=geckodriver
PLATFORM=linux64
FILE_NAME=geckodriver-${VERSION}-${PLATFORM}.tar.gz
PACKAGE_URL=https://github.com/mozilla/geckodriver/releases/download/$VERSION/geckodriver-$VERSION-$PLATFORM.tar.gz

# downloaded file if needed
if [ -e $CACHE_DIR/$FILE_NAME ]; then
    topic "found latest version: ${VERSION}"
else
    topic "downloading latest version: ${VERSION}"
    curl -s $PACKAGE_URL -L -o $CACHE_DIR/$FILE_NAME
fi

topic "extracting geckodriver binaries to ${BUILD_DIR}/bin/${ARCHIVE_NAME}"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME
tar xzf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR
mv $CACHE_DIR/$ARCHIVE_NAME $BUILD_DIR/bin/
